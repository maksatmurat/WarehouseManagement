@typeparam TModel where TModel : class

<table class="table-bordered" style="caption-side:bottom;border-collapse:collapse">
    <thead>
        <tr class="p-2" style="background-color: lightgray;">
            <th>Наименование</th>
            @if (source == "client")
            {
                <th>Address</th>
            }
        </tr>
    </thead>
    <tbody>
        @if (Items != null && Items.Any())
        {
            @foreach (var item in Items)
            {
                <tr class="p-2" @onclick="() => OnRowClick.InvokeAsync(item)" style="cursor:pointer">
                    <td>@(typeof(TModel).GetProperty("Name")?.GetValue(item)?.ToString())</td>
                @if (source == "client")
                {
                        <td>@(typeof(TModel).GetProperty("Address")?.GetValue(item)?.ToString())</td>
                }
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="100%">Нет записи</td>
            </tr>
        }
    </tbody>
</table>

@code {
    public string source = "";
    protected override async Task OnInitializedAsync()
    {
        source = $"{typeof(TModel).Name.ToLower()}";
    }

    [Parameter] public List<TModel> Items { get; set; } = new();
    [Parameter] public EventCallback<TModel> OnRowClick { get; set; }

}
